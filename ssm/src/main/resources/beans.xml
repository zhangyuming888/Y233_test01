<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 1、配置扫描包,排除Controller层的注解	-->
    <context:component-scan base-package="cn.bdqn">
        <context:exclude-filter	type="annotation"
                                   expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--Spring管理MyBatis-->
    <!--1.编写properties文件的东西-->
    <!--2.去读取Properties属性配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--3.注册数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--4.定义事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--5.开启事务的注解支持-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--6.配置SqlSessionFactoryBean，因为Spring所以我们以后就不用出现new-->
    <!--作用：创建SqlSessionFactory工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--7.配置自动扫描所有 Mapper 接口和文件 作用就是让这些实现类也被纳入到Spring中-->
    <!-- 作用：能够扫描所有的Mapper接口的实现，让这些Mapper能够自动注入-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.bdqn.mapper"/>
    </bean>
</beans>